{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/code/my-medusa-store-storefront/src/modules/common/icons/eye.tsx"],"sourcesContent":["import React from \"react\"\r\n\r\nimport { IconProps } from \"types/icon\"\r\n\r\nconst Eye: React.FC<IconProps> = ({\r\n  size = \"20\",\r\n  color = \"currentColor\",\r\n  ...attributes\r\n}) => {\r\n  return (\r\n    <svg\r\n      width={size}\r\n      height={size}\r\n      viewBox=\"0 0 20 20\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      {...attributes}\r\n    >\r\n      <path\r\n        d=\"M2.5 9.99992C2.5 9.99992 5.22727 4.58325 10 4.58325C14.7727 4.58325 17.5 9.99992 17.5 9.99992C17.5 9.99992 14.7727 15.4166 10 15.4166C5.22727 15.4166 2.5 9.99992 2.5 9.99992Z\"\r\n        stroke={color}\r\n        strokeWidth=\"1.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n      <path\r\n        d=\"M9.99965 12.074C11.145 12.074 12.0735 11.1455 12.0735 10.0001C12.0735 8.85477 11.145 7.92627 9.99965 7.92627C8.85428 7.92627 7.92578 8.85477 7.92578 10.0001C7.92578 11.1455 8.85428 12.074 9.99965 12.074Z\"\r\n        stroke={color}\r\n        strokeWidth=\"1.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Eye\r\n"],"names":[],"mappings":";;;;;AAIA,MAAM,MAA2B,CAAC,EAChC,OAAO,IAAI,EACX,QAAQ,cAAc,EACtB,GAAG,YACJ;IACC,qBACE,6LAAC;QACC,OAAO;QACP,QAAQ;QACR,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,UAAU;;0BAEd,6LAAC;gBACC,GAAE;gBACF,QAAQ;gBACR,aAAY;gBACZ,eAAc;gBACd,gBAAe;;;;;;0BAEjB,6LAAC;gBACC,GAAE;gBACF,QAAQ;gBACR,aAAY;gBACZ,eAAc;gBACd,gBAAe;;;;;;;;;;;;AAIvB;KA9BM;uCAgCS"}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://C%3A/code/my-medusa-store-storefront/src/modules/common/icons/eye-off.tsx"],"sourcesContent":["import React from \"react\"\r\n\r\nimport { IconProps } from \"types/icon\"\r\n\r\nconst EyeOff: React.FC<IconProps> = ({\r\n  size = \"20\",\r\n  color = \"currentColor\",\r\n  ...attributes\r\n}) => {\r\n  return (\r\n    <svg\r\n      width={size}\r\n      height={size}\r\n      viewBox=\"0 0 20 20\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      {...attributes}\r\n    >\r\n      <path\r\n        d=\"M8.56818 4.70906C9.0375 4.59921 9.518 4.54429 10 4.54543C14.7727 4.54543 17.5 9.99997 17.5 9.99997C17.0861 10.7742 16.5925 11.5032 16.0273 12.175M11.4455 11.4454C11.2582 11.6464 11.0324 11.8076 10.7815 11.9194C10.5306 12.0312 10.2597 12.0913 9.98506 12.0961C9.71042 12.101 9.43761 12.0505 9.18292 11.9476C8.92822 11.8447 8.69686 11.6916 8.50262 11.4973C8.30839 11.3031 8.15527 11.0718 8.05239 10.8171C7.94952 10.5624 7.899 10.2896 7.90384 10.0149C7.90869 9.74027 7.9688 9.46941 8.0806 9.2185C8.19239 8.9676 8.35358 8.74178 8.55455 8.55452M14.05 14.05C12.8845 14.9384 11.4653 15.4306 10 15.4545C5.22727 15.4545 2.5 9.99997 2.5 9.99997C3.34811 8.41945 4.52441 7.03857 5.95 5.94997L14.05 14.05Z\"\r\n        stroke={color}\r\n        strokeWidth=\"1.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n      <path\r\n        d=\"M2.5 2.5L17.5 17.5\"\r\n        stroke={color}\r\n        strokeWidth=\"1.5\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default EyeOff\r\n"],"names":[],"mappings":";;;;;AAIA,MAAM,SAA8B,CAAC,EACnC,OAAO,IAAI,EACX,QAAQ,cAAc,EACtB,GAAG,YACJ;IACC,qBACE,6LAAC;QACC,OAAO;QACP,QAAQ;QACR,SAAQ;QACR,MAAK;QACL,OAAM;QACL,GAAG,UAAU;;0BAEd,6LAAC;gBACC,GAAE;gBACF,QAAQ;gBACR,aAAY;gBACZ,eAAc;gBACd,gBAAe;;;;;;0BAEjB,6LAAC;gBACC,GAAE;gBACF,QAAQ;gBACR,aAAY;gBACZ,eAAc;gBACd,gBAAe;;;;;;;;;;;;AAIvB;KA9BM;uCAgCS"}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file://C%3A/code/my-medusa-store-storefront/src/modules/common/components/input/index.tsx"],"sourcesContent":["import { Label } from \"@medusajs/ui\"\r\nimport React, { useEffect, useImperativeHandle, useState } from \"react\"\r\n\r\nimport Eye from \"@modules/common/icons/eye\"\r\nimport EyeOff from \"@modules/common/icons/eye-off\"\r\n\r\ntype InputProps = Omit<\r\n  Omit<React.InputHTMLAttributes<HTMLInputElement>, \"size\">,\r\n  \"placeholder\"\r\n> & {\r\n  label: string\r\n  errors?: Record<string, unknown>\r\n  touched?: Record<string, unknown>\r\n  name: string\r\n  topLabel?: string\r\n}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ type, name, label, touched, required, topLabel, ...props }, ref) => {\r\n    const inputRef = React.useRef<HTMLInputElement>(null)\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [inputType, setInputType] = useState(type)\r\n\r\n    useEffect(() => {\r\n      if (type === \"password\" && showPassword) {\r\n        setInputType(\"text\")\r\n      }\r\n\r\n      if (type === \"password\" && !showPassword) {\r\n        setInputType(\"password\")\r\n      }\r\n    }, [type, showPassword])\r\n\r\n    useImperativeHandle(ref, () => inputRef.current!)\r\n\r\n    return (\r\n      <div className=\"flex flex-col w-full\">\r\n        {topLabel && (\r\n          <Label className=\"mb-2 txt-compact-medium-plus\">{topLabel}</Label>\r\n        )}\r\n        <div className=\"flex relative z-0 w-full txt-compact-medium\">\r\n          <input\r\n            type={inputType}\r\n            name={name}\r\n            placeholder=\" \"\r\n            required={required}\r\n            className=\"pt-4 pb-1 block w-full h-11 px-4 mt-0 bg-ui-bg-field border rounded-md appearance-none focus:outline-none focus:ring-0 focus:shadow-borders-interactive-with-active border-ui-border-base hover:bg-ui-bg-field-hover\"\r\n            {...props}\r\n            ref={inputRef}\r\n          />\r\n          <label\r\n            htmlFor={name}\r\n            onClick={() => inputRef.current?.focus()}\r\n            className=\"flex items-center justify-center mx-3 px-1 transition-all absolute duration-300 top-3 -z-1 origin-0 text-ui-fg-subtle\"\r\n          >\r\n            {label}\r\n            {required && <span className=\"text-rose-500\">*</span>}\r\n          </label>\r\n          {type === \"password\" && (\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setShowPassword(!showPassword)}\r\n              className=\"text-ui-fg-subtle px-4 focus:outline-none transition-all duration-150 outline-none focus:text-ui-fg-base absolute right-0 top-3\"\r\n            >\r\n              {showPassword ? <Eye /> : <EyeOff />}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n)\r\n\r\nInput.displayName = \"Input\"\r\n\r\nexport default Input\r\n"],"names":[],"mappings":";;;;AACA;AAEA;AACA;AAJA;;;;;;;AAiBA,MAAM,sBAAQ,GAAA,6JAAA,CAAA,UAAK,CAAC,UAAU,SAC5B,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;;IAC7D,MAAM,WAAW,6JAAA,CAAA,UAAK,CAAC,MAAM,CAAmB;IAChD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;2BAAE;YACR,IAAI,SAAS,cAAc,cAAc;gBACvC,aAAa;YACf;YAEA,IAAI,SAAS,cAAc,CAAC,cAAc;gBACxC,aAAa;YACf;QACF;0BAAG;QAAC;QAAM;KAAa;IAEvB,CAAA,GAAA,6JAAA,CAAA,sBAAmB,AAAD,EAAE;qCAAK,IAAM,SAAS,OAAO;;IAE/C,qBACE,6LAAC;QAAI,WAAU;;YACZ,0BACC,6LAAC,kLAAA,CAAA,QAAK;gBAAC,WAAU;0BAAgC;;;;;;0BAEnD,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,MAAM;wBACN,MAAM;wBACN,aAAY;wBACZ,UAAU;wBACV,WAAU;wBACT,GAAG,KAAK;wBACT,KAAK;;;;;;kCAEP,6LAAC;wBACC,SAAS;wBACT,SAAS,IAAM,SAAS,OAAO,EAAE;wBACjC,WAAU;;4BAET;4BACA,0BAAY,6LAAC;gCAAK,WAAU;0CAAgB;;;;;;;;;;;;oBAE9C,SAAS,4BACR,6LAAC;wBACC,MAAK;wBACL,SAAS,IAAM,gBAAgB,CAAC;wBAChC,WAAU;kCAET,6BAAe,6LAAC,4IAAA,CAAA,UAAG;;;;iDAAM,6LAAC,mJAAA,CAAA,UAAM;;;;;;;;;;;;;;;;;;;;;;AAM7C;;AAGF,MAAM,WAAW,GAAG;uCAEL"}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file://C%3A/code/my-medusa-store-storefront/src/modules/checkout/components/error-message/index.tsx"],"sourcesContent":["const ErrorMessage = ({ error, 'data-testid': dataTestid }: { error?: string | null, 'data-testid'?: string }) => {\r\n  if (!error) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"pt-2 text-rose-500 text-small-regular\" data-testid={dataTestid}>\r\n      <span>{error}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage\r\n"],"names":[],"mappings":";;;;;AAAA,MAAM,eAAe,CAAC,EAAE,KAAK,EAAE,eAAe,UAAU,EAAqD;IAC3G,IAAI,CAAC,OAAO;QACV,OAAO;IACT;IAEA,qBACE,6LAAC;QAAI,WAAU;QAAwC,eAAa;kBAClE,cAAA,6LAAC;sBAAM;;;;;;;;;;;AAGb;KAVM;uCAYS"}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":["file://C%3A/code/my-medusa-store-storefront/src/modules/checkout/components/submit-button/index.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { Button } from \"@medusajs/ui\"\r\nimport React from \"react\"\r\nimport { useFormStatus } from \"react-dom\"\r\n\r\nexport function SubmitButton({\r\n  children,\r\n  variant = \"primary\",\r\n  className,\r\n  \"data-testid\": dataTestId,\r\n}: {\r\n  children: React.ReactNode\r\n  variant?: \"primary\" | \"secondary\" | \"transparent\" | \"danger\" | null\r\n  className?: string\r\n  \"data-testid\"?: string\r\n}) {\r\n  const { pending } = useFormStatus()\r\n\r\n  return (\r\n    <Button\r\n      size=\"large\"\r\n      className={className}\r\n      type=\"submit\"\r\n      isLoading={pending}\r\n      variant={variant || \"primary\"}\r\n      data-testid={dataTestId}\r\n    >\r\n      {children}\r\n    </Button>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAIA;AAFA;;;AAFA;;;AAMO,SAAS,aAAa,EAC3B,QAAQ,EACR,UAAU,SAAS,EACnB,SAAS,EACT,eAAe,UAAU,EAM1B;;IACC,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,oKAAA,CAAA,gBAAa,AAAD;IAEhC,qBACE,6LAAC,oLAAA,CAAA,SAAM;QACL,MAAK;QACL,WAAW;QACX,MAAK;QACL,WAAW;QACX,SAAS,WAAW;QACpB,eAAa;kBAEZ;;;;;;AAGP;GAzBgB;;QAWM,oKAAA,CAAA,gBAAa;;;KAXnB"}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file://C%3A/code/my-medusa-store-storefront/src/modules/account/components/register/index.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useActionState } from \"react\"\r\nimport Input from \"@modules/common/components/input\"\r\nimport { LOGIN_VIEW } from \"@modules/account/templates/login-template\"\r\nimport ErrorMessage from \"@modules/checkout/components/error-message\"\r\nimport { SubmitButton } from \"@modules/checkout/components/submit-button\"\r\nimport LocalizedClientLink from \"@modules/common/components/localized-client-link\"\r\nimport { signup } from \"@lib/data/customer\"\r\n\r\ntype Props = {\r\n  setCurrentView: (view: LOGIN_VIEW) => void\r\n}\r\n\r\nconst Register = ({ setCurrentView }: Props) => {\r\n  const [message, formAction] = useActionState(signup, null)\r\n\r\n  return (\r\n    <div\r\n      className=\"max-w-sm flex flex-col items-center\"\r\n      data-testid=\"register-page\"\r\n    >\r\n      <h1 className=\"text-large-semi uppercase mb-6\">\r\n        Become a Medusa Store Member\r\n      </h1>\r\n      <p className=\"text-center text-base-regular text-ui-fg-base mb-4\">\r\n        Create your Medusa Store Member profile, and get access to an enhanced\r\n        shopping experience.\r\n      </p>\r\n      <form className=\"w-full flex flex-col\" action={formAction}>\r\n        <div className=\"flex flex-col w-full gap-y-2\">\r\n          <Input\r\n            label=\"First name\"\r\n            name=\"first_name\"\r\n            required\r\n            autoComplete=\"given-name\"\r\n            data-testid=\"first-name-input\"\r\n          />\r\n          <Input\r\n            label=\"Last name\"\r\n            name=\"last_name\"\r\n            required\r\n            autoComplete=\"family-name\"\r\n            data-testid=\"last-name-input\"\r\n          />\r\n          <Input\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            required\r\n            type=\"email\"\r\n            autoComplete=\"email\"\r\n            data-testid=\"email-input\"\r\n          />\r\n          <Input\r\n            label=\"Phone\"\r\n            name=\"phone\"\r\n            type=\"tel\"\r\n            autoComplete=\"tel\"\r\n            data-testid=\"phone-input\"\r\n          />\r\n          <Input\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            required\r\n            type=\"password\"\r\n            autoComplete=\"new-password\"\r\n            data-testid=\"password-input\"\r\n          />\r\n        </div>\r\n        <ErrorMessage error={message} data-testid=\"register-error\" />\r\n        <span className=\"text-center text-ui-fg-base text-small-regular mt-6\">\r\n          By creating an account, you agree to Medusa Store&apos;s{\" \"}\r\n          <LocalizedClientLink\r\n            href=\"/content/privacy-policy\"\r\n            className=\"underline\"\r\n          >\r\n            Privacy Policy\r\n          </LocalizedClientLink>{\" \"}\r\n          and{\" \"}\r\n          <LocalizedClientLink\r\n            href=\"/content/terms-of-use\"\r\n            className=\"underline\"\r\n          >\r\n            Terms of Use\r\n          </LocalizedClientLink>\r\n          .\r\n        </span>\r\n        <SubmitButton className=\"w-full mt-6\" data-testid=\"register-button\">\r\n          Join\r\n        </SubmitButton>\r\n      </form>\r\n      <span className=\"text-center text-ui-fg-base text-small-regular mt-6\">\r\n        Already a member?{\" \"}\r\n        <button\r\n          onClick={() => setCurrentView(LOGIN_VIEW.SIGN_IN)}\r\n          className=\"underline\"\r\n        >\r\n          Sign in\r\n        </button>\r\n        .\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AARA;;;;;;;;AAcA,MAAM,WAAW,CAAC,EAAE,cAAc,EAAS;;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,iBAAc,AAAD,EAAE,iIAAA,CAAA,SAAM,EAAE;IAErD,qBACE,6LAAC;QACC,WAAU;QACV,eAAY;;0BAEZ,6LAAC;gBAAG,WAAU;0BAAiC;;;;;;0BAG/C,6LAAC;gBAAE,WAAU;0BAAqD;;;;;;0BAIlE,6LAAC;gBAAK,WAAU;gBAAuB,QAAQ;;kCAC7C,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,4JAAA,CAAA,UAAK;gCACJ,OAAM;gCACN,MAAK;gCACL,QAAQ;gCACR,cAAa;gCACb,eAAY;;;;;;0CAEd,6LAAC,4JAAA,CAAA,UAAK;gCACJ,OAAM;gCACN,MAAK;gCACL,QAAQ;gCACR,cAAa;gCACb,eAAY;;;;;;0CAEd,6LAAC,4JAAA,CAAA,UAAK;gCACJ,OAAM;gCACN,MAAK;gCACL,QAAQ;gCACR,MAAK;gCACL,cAAa;gCACb,eAAY;;;;;;0CAEd,6LAAC,4JAAA,CAAA,UAAK;gCACJ,OAAM;gCACN,MAAK;gCACL,MAAK;gCACL,cAAa;gCACb,eAAY;;;;;;0CAEd,6LAAC,4JAAA,CAAA,UAAK;gCACJ,OAAM;gCACN,MAAK;gCACL,QAAQ;gCACR,MAAK;gCACL,cAAa;gCACb,eAAY;;;;;;;;;;;;kCAGhB,6LAAC,yKAAA,CAAA,UAAY;wBAAC,OAAO;wBAAS,eAAY;;;;;;kCAC1C,6LAAC;wBAAK,WAAU;;4BAAsD;4BACX;0CACzD,6LAAC,kLAAA,CAAA,UAAmB;gCAClB,MAAK;gCACL,WAAU;0CACX;;;;;;4BAEsB;4BAAI;4BACvB;0CACJ,6LAAC,kLAAA,CAAA,UAAmB;gCAClB,MAAK;gCACL,WAAU;0CACX;;;;;;4BAEqB;;;;;;;kCAGxB,6LAAC,yKAAA,CAAA,eAAY;wBAAC,WAAU;wBAAc,eAAY;kCAAkB;;;;;;;;;;;;0BAItE,6LAAC;gBAAK,WAAU;;oBAAsD;oBAClD;kCAClB,6LAAC;wBACC,SAAS,IAAM,eAAe,+JAAA,CAAA,aAAU,CAAC,OAAO;wBAChD,WAAU;kCACX;;;;;;oBAEQ;;;;;;;;;;;;;AAKjB;GAzFM;;QAC0B,6JAAA,CAAA,iBAAc;;;KADxC;uCA2FS"}},
    {"offset": {"line": 540, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 546, "column": 0}, "map": {"version":3,"sources":["file://C%3A/code/my-medusa-store-storefront/src/modules/account/components/login/index.tsx"],"sourcesContent":["import { login } from \"@lib/data/customer\"\r\nimport { LOGIN_VIEW } from \"@modules/account/templates/login-template\"\r\nimport ErrorMessage from \"@modules/checkout/components/error-message\"\r\nimport { SubmitButton } from \"@modules/checkout/components/submit-button\"\r\nimport Input from \"@modules/common/components/input\"\r\nimport { useActionState } from \"react\"\r\n\r\ntype Props = {\r\n  setCurrentView: (view: LOGIN_VIEW) => void\r\n}\r\n\r\nconst Login = ({ setCurrentView }: Props) => {\r\n  const [message, formAction] = useActionState(login, null)\r\n\r\n  return (\r\n    <div\r\n      className=\"max-w-sm w-full flex flex-col items-center\"\r\n      data-testid=\"login-page\"\r\n    >\r\n      <h1 className=\"text-large-semi uppercase mb-6\">Welcome back</h1>\r\n      <p className=\"text-center text-base-regular text-ui-fg-base mb-8\">\r\n        Sign in to access an enhanced shopping experience.\r\n      </p>\r\n      <form className=\"w-full\" action={formAction}>\r\n        <div className=\"flex flex-col w-full gap-y-2\">\r\n          <Input\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            title=\"Enter a valid email address.\"\r\n            autoComplete=\"email\"\r\n            required\r\n            data-testid=\"email-input\"\r\n          />\r\n          <Input\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            autoComplete=\"current-password\"\r\n            required\r\n            data-testid=\"password-input\"\r\n          />\r\n        </div>\r\n        <ErrorMessage error={message} data-testid=\"login-error-message\" />\r\n        <SubmitButton data-testid=\"sign-in-button\" className=\"w-full mt-6\">\r\n          Sign in\r\n        </SubmitButton>\r\n      </form>\r\n      <span className=\"text-center text-ui-fg-base text-small-regular mt-6\">\r\n        Not a member?{\" \"}\r\n        <button\r\n          onClick={() => setCurrentView(LOGIN_VIEW.REGISTER)}\r\n          className=\"underline\"\r\n          data-testid=\"register-button\"\r\n        >\r\n          Join us\r\n        </button>\r\n        .\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAMA,MAAM,QAAQ,CAAC,EAAE,cAAc,EAAS;;IACtC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,iBAAc,AAAD,EAAE,iIAAA,CAAA,QAAK,EAAE;IAEpD,qBACE,6LAAC;QACC,WAAU;QACV,eAAY;;0BAEZ,6LAAC;gBAAG,WAAU;0BAAiC;;;;;;0BAC/C,6LAAC;gBAAE,WAAU;0BAAqD;;;;;;0BAGlE,6LAAC;gBAAK,WAAU;gBAAS,QAAQ;;kCAC/B,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,4JAAA,CAAA,UAAK;gCACJ,OAAM;gCACN,MAAK;gCACL,MAAK;gCACL,OAAM;gCACN,cAAa;gCACb,QAAQ;gCACR,eAAY;;;;;;0CAEd,6LAAC,4JAAA,CAAA,UAAK;gCACJ,OAAM;gCACN,MAAK;gCACL,MAAK;gCACL,cAAa;gCACb,QAAQ;gCACR,eAAY;;;;;;;;;;;;kCAGhB,6LAAC,yKAAA,CAAA,UAAY;wBAAC,OAAO;wBAAS,eAAY;;;;;;kCAC1C,6LAAC,yKAAA,CAAA,eAAY;wBAAC,eAAY;wBAAiB,WAAU;kCAAc;;;;;;;;;;;;0BAIrE,6LAAC;gBAAK,WAAU;;oBAAsD;oBACtD;kCACd,6LAAC;wBACC,SAAS,IAAM,eAAe,+JAAA,CAAA,aAAU,CAAC,QAAQ;wBACjD,WAAU;wBACV,eAAY;kCACb;;;;;;oBAEQ;;;;;;;;;;;;;AAKjB;GAlDM;;QAC0B,6JAAA,CAAA,iBAAc;;;KADxC;uCAoDS"}},
    {"offset": {"line": 689, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 695, "column": 0}, "map": {"version":3,"sources":["file://C%3A/code/my-medusa-store-storefront/src/modules/account/templates/login-template.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState } from \"react\"\r\n\r\nimport Register from \"@modules/account/components/register\"\r\nimport Login from \"@modules/account/components/login\"\r\n\r\nexport enum LOGIN_VIEW {\r\n  SIGN_IN = \"sign-in\",\r\n  REGISTER = \"register\",\r\n}\r\n\r\nconst LoginTemplate = () => {\r\n  const [currentView, setCurrentView] = useState(\"sign-in\")\r\n\r\n  return (\r\n    <div className=\"w-full flex justify-start px-8 py-8\">\r\n      {currentView === \"sign-in\" ? (\r\n        <Login setCurrentView={setCurrentView} />\r\n      ) : (\r\n        <Register setCurrentView={setCurrentView} />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginTemplate\r\n"],"names":[],"mappings":";;;;;AAEA;AAEA;AACA;;;AALA;;;;AAOO,IAAA,AAAK,oCAAA;;;WAAA;;AAKZ,MAAM,gBAAgB;;IACpB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,qBACE,6LAAC;QAAI,WAAU;kBACZ,gBAAgB,0BACf,6LAAC,6JAAA,CAAA,UAAK;YAAC,gBAAgB;;;;;iCAEvB,6LAAC,gKAAA,CAAA,UAAQ;YAAC,gBAAgB;;;;;;;;;;;AAIlC;GAZM;KAAA;uCAcS"}},
    {"offset": {"line": 746, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 757, "column": 0}, "map": {"version":3,"sources":["file://C%3A/code/my-medusa-store-storefront/node_modules/%40radix-ui/react-label/node_modules/%40radix-ui/react-slot/src/Slot.tsx"],"sourcesContent":["import * as React from 'react';\nimport { composeRefs } from '@radix-ui/react-compose-refs';\n\n/* -------------------------------------------------------------------------------------------------\n * Slot\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  children?: React.ReactNode;\n}\n\nconst Slot = React.forwardRef<HTMLElement, SlotProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n\n  if (slottable) {\n    // the new element to render is the one passed as a child of `Slottable`\n    const newElement = slottable.props.children;\n\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        // because the new element will be the one rendered, we are only interested\n        // in grabbing its children (`newElement.props.children`)\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement)\n          ? (newElement.props as { children: React.ReactNode }).children\n          : null;\n      } else {\n        return child;\n      }\n    });\n\n    return (\n      <SlotClone {...slotProps} ref={forwardedRef}>\n        {React.isValidElement(newElement)\n          ? React.cloneElement(newElement, undefined, newChildren)\n          : null}\n      </SlotClone>\n    );\n  }\n\n  return (\n    <SlotClone {...slotProps} ref={forwardedRef}>\n      {children}\n    </SlotClone>\n  );\n});\n\nSlot.displayName = 'Slot';\n\n/* -------------------------------------------------------------------------------------------------\n * SlotClone\n * -----------------------------------------------------------------------------------------------*/\n\ninterface SlotCloneProps {\n  children: React.ReactNode;\n}\n\nconst SlotClone = React.forwardRef<any, SlotCloneProps>((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n\n  if (React.isValidElement(children)) {\n    const childrenRef = getElementRef(children);\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props as AnyProps),\n      // @ts-ignore\n      ref: forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef,\n    });\n  }\n\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\n\nSlotClone.displayName = 'SlotClone';\n\n/* -------------------------------------------------------------------------------------------------\n * Slottable\n * -----------------------------------------------------------------------------------------------*/\n\nconst Slottable = ({ children }: { children: React.ReactNode }) => {\n  return <>{children}</>;\n};\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype AnyProps = Record<string, any>;\n\nfunction isSlottable(\n  child: React.ReactNode\n): child is React.ReactElement<React.ComponentProps<typeof Slottable>, typeof Slottable> {\n  return React.isValidElement(child) && child.type === Slottable;\n}\n\nfunction mergeProps(slotProps: AnyProps, childProps: AnyProps) {\n  // all child props should override\n  const overrideProps = { ...childProps };\n\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      // if the handler exists on both, we compose them\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args: unknown[]) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      }\n      // but if it exists only on the slot, we use only this one\n      else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    }\n    // if it's `style`, we merge them\n    else if (propName === 'style') {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === 'className') {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(' ');\n    }\n  }\n\n  return { ...slotProps, ...overrideProps };\n}\n\n// Before React 19 accessing `element.props.ref` will throw a warning and suggest using `element.ref`\n// After React 19 accessing `element.ref` does the opposite.\n// https://github.com/facebook/react/pull/28348\n//\n// Access the ref using the method that doesn't yield a warning.\nfunction getElementRef(element: React.ReactElement) {\n  // React <=18 in DEV\n  let getter = Object.getOwnPropertyDescriptor(element.props, 'ref')?.get;\n  let mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element as any).ref;\n  }\n\n  // React 19 in DEV\n  getter = Object.getOwnPropertyDescriptor(element, 'ref')?.get;\n  mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element.props as { ref?: React.Ref<unknown> }).ref;\n  }\n\n  // Not DEV\n  return (element.props as { ref?: React.Ref<unknown> }).ref || (element as any).ref;\n}\n\nconst Root = Slot;\n\nexport {\n  Slot,\n  Slottable,\n  //\n  Root,\n};\nexport type { SlotProps };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 867, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 873, "column": 0}, "map": {"version":3,"sources":["file://C%3A/code/my-medusa-store-storefront/node_modules/%40radix-ui/react-label/node_modules/%40radix-ui/react-primitive/src/Primitive.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Slot } from '@radix-ui/react-slot';\n\nconst NODES = [\n  'a',\n  'button',\n  'div',\n  'form',\n  'h2',\n  'h3',\n  'img',\n  'input',\n  'label',\n  'li',\n  'nav',\n  'ol',\n  'p',\n  'span',\n  'svg',\n  'ul',\n] as const;\n\ntype Primitives = { [E in (typeof NODES)[number]]: PrimitiveForwardRefComponent<E> };\ntype PrimitivePropsWithRef<E extends React.ElementType> = React.ComponentPropsWithRef<E> & {\n  asChild?: boolean;\n};\n\ninterface PrimitiveForwardRefComponent<E extends React.ElementType>\n  extends React.ForwardRefExoticComponent<PrimitivePropsWithRef<E>> {}\n\n/* -------------------------------------------------------------------------------------------------\n * Primitive\n * -----------------------------------------------------------------------------------------------*/\n\nconst Primitive = NODES.reduce((primitive, node) => {\n  const Node = React.forwardRef((props: PrimitivePropsWithRef<typeof node>, forwardedRef: any) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp: any = asChild ? Slot : node;\n\n    if (typeof window !== 'undefined') {\n      (window as any)[Symbol.for('radix-ui')] = true;\n    }\n\n    return <Comp {...primitiveProps} ref={forwardedRef} />;\n  });\n\n  Node.displayName = `Primitive.${node}`;\n\n  return { ...primitive, [node]: Node };\n}, {} as Primitives);\n\n/* -------------------------------------------------------------------------------------------------\n * Utils\n * -----------------------------------------------------------------------------------------------*/\n\n/**\n * Flush custom event dispatch\n * https://github.com/radix-ui/primitives/pull/1378\n *\n * React batches *all* event handlers since version 18, this introduces certain considerations when using custom event types.\n *\n * Internally, React prioritises events in the following order:\n *  - discrete\n *  - continuous\n *  - default\n *\n * https://github.com/facebook/react/blob/a8a4742f1c54493df00da648a3f9d26e3db9c8b5/packages/react-dom/src/events/ReactDOMEventListener.js#L294-L350\n *\n * `discrete` is an  important distinction as updates within these events are applied immediately.\n * React however, is not able to infer the priority of custom event types due to how they are detected internally.\n * Because of this, it's possible for updates from custom events to be unexpectedly batched when\n * dispatched by another `discrete` event.\n *\n * In order to ensure that updates from custom events are applied predictably, we need to manually flush the batch.\n * This utility should be used when dispatching a custom event from within another `discrete` event, this utility\n * is not necessary when dispatching known event types, or if dispatching a custom type inside a non-discrete event.\n * For example:\n *\n * dispatching a known click 👎\n * target.dispatchEvent(new Event(‘click’))\n *\n * dispatching a custom type within a non-discrete event 👎\n * onScroll={(event) => event.target.dispatchEvent(new CustomEvent(‘customType’))}\n *\n * dispatching a custom type within a `discrete` event 👍\n * onPointerDown={(event) => dispatchDiscreteCustomEvent(event.target, new CustomEvent(‘customType’))}\n *\n * Note: though React classifies `focus`, `focusin` and `focusout` events as `discrete`, it's  not recommended to use\n * this utility with them. This is because it's possible for those handlers to be called implicitly during render\n * e.g. when focus is within a component as it is unmounted, or when managing focus on mount.\n */\n\nfunction dispatchDiscreteCustomEvent<E extends CustomEvent>(target: E['target'], event: E) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Primitive;\n\nexport {\n  Primitive,\n  //\n  Root,\n  //\n  dispatchDiscreteCustomEvent,\n};\nexport type { PrimitivePropsWithRef };\n"],"names":[],"mappings":";;;;;;AAAA,YAAY,WAAW;AACvB,YAAY,cAAc;AA2Cf;AA1CX,SAAS,YAAY;;;;;AAErB,IAAM,QAAQ;IACZ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACF;AAcA,IAAM,YAAY,MAAM,MAAA,CAAO,CAAC,WAAW,SAAS;IAClD,MAAM,OAAa,8JAAA,UAAA,CAAW,CAAC,OAA2C,iBAAsB;QAC9F,MAAM,EAAE,OAAA,EAAS,GAAG,eAAe,CAAA,GAAI;QACvC,MAAM,OAAY,iOAAU,OAAA,GAAO;QAEnC,IAAI,OAAO,WAAW,aAAa;YAChC,MAAA,CAAe,OAAO,GAAA,CAAI,UAAU,CAAC,CAAA,GAAI;QAC5C;QAEA,OAAO,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,EAAC,MAAA;YAAM,GAAG,cAAA;YAAgB,KAAK;QAAA,CAAc;IACtD,CAAC;IAED,KAAK,WAAA,GAAc,CAAA,UAAA,EAAa,IAAI,EAAA;IAEpC,OAAO;QAAE,GAAG,SAAA;QAAW,CAAC,IAAI,CAAA,EAAG;IAAK;AACtC,GAAG,CAAC,CAAe;AA2CnB,SAAS,4BAAmD,MAAA,EAAqB,KAAA,EAAU;IACzF,IAAI,OAAQ,CAAS,qKAAA,SAAA,CAAU,IAAM,OAAO,aAAA,CAAc,KAAK,CAAC;AAClE;AAIA,IAAM,OAAO","ignoreList":[0]}},
    {"offset": {"line": 929, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 935, "column": 0}, "map": {"version":3,"sources":["file://C%3A/code/my-medusa-store-storefront/node_modules/%40radix-ui/react-label/src/Label.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * Label\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Label';\n\ntype LabelElement = React.ElementRef<typeof Primitive.label>;\ntype PrimitiveLabelProps = React.ComponentPropsWithoutRef<typeof Primitive.label>;\ninterface LabelProps extends PrimitiveLabelProps {}\n\nconst Label = React.forwardRef<LabelElement, LabelProps>((props, forwardedRef) => {\n  return (\n    <Primitive.label\n      {...props}\n      ref={forwardedRef}\n      onMouseDown={(event) => {\n        // only prevent text selection if clicking inside the label itself\n        const target = event.target as HTMLElement;\n        if (target.closest('button, input, select, textarea')) return;\n\n        props.onMouseDown?.(event);\n        // prevent text selection when double clicking label\n        if (!event.defaultPrevented && event.detail > 1) event.preventDefault();\n      }}\n    />\n  );\n});\n\nLabel.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = Label;\n\nexport {\n  Label,\n  //\n  Root,\n};\nexport type { LabelProps };\n"],"names":[],"mappings":";;;;;AAAA,YAAY,WAAW;AAenB;AAdJ,SAAS,iBAAiB;;;;;AAM1B,IAAM,OAAO;AAMb,IAAM,QAAc,8JAAA,UAAA,CAAqC,CAAC,OAAO,iBAAiB;IAChF,OACE,aAAA,GAAA,CAAA,GAAA,sKAAA,CAAA,MAAA,8NAAC,YAAA,CAAU,KAAA,EAAV;QACE,GAAG,KAAA;QACJ,KAAK;QACL,aAAa,CAAC,UAAU;YAEtB,MAAM,SAAS,MAAM,MAAA;YACrB,IAAI,OAAO,OAAA,CAAQ,iCAAiC,EAAG,CAAA;YAEvD,MAAM,WAAA,GAAc,KAAK;YAEzB,IAAI,CAAC,MAAM,gBAAA,IAAoB,MAAM,MAAA,GAAS,EAAG,CAAA,MAAM,cAAA,CAAe;QACxE;IAAA;AAGN,CAAC;AAED,MAAM,WAAA,GAAc;AAIpB,IAAM,OAAO","ignoreList":[0]}},
    {"offset": {"line": 964, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 980, "column": 0}, "map": {"version":3,"file":"label.js","sources":["file://C%3A/code/my-medusa-store-storefront/node_modules/%40medusajs/ui/src/components/label/label.tsx"],"sourcesContent":["\"use client\"\n\nimport { cva, type VariantProps } from \"cva\"\nimport { Label as RadixLabel } from \"radix-ui\"\nimport * as React from \"react\"\n\nimport { clx } from \"@/utils/clx\"\n\nconst labelVariants = cva({\n  base: \"font-sans\",\n  variants: {\n    size: {\n      xsmall: \"txt-compact-xsmall\",\n      small: \"txt-compact-small\",\n      base: \"txt-compact-medium\",\n      large: \"txt-compact-large\",\n    },\n    weight: {\n      regular: \"font-normal\",\n      plus: \"font-medium\",\n    },\n  },\n  defaultVariants: {\n    size: \"base\",\n    weight: \"regular\",\n  },\n})\n\ninterface LabelProps\n  extends React.ComponentPropsWithoutRef<\"label\">,\n    VariantProps<typeof labelVariants> {}\n\n/**\n * This component is based on the [Radix UI Label](https://www.radix-ui.com/primitives/docs/components/label) primitive.\n */\nconst Label = React.forwardRef<HTMLLabelElement, LabelProps>(\n  ({ \n    className, \n    /**\n     * The label's size.\n     */\n    size = \"base\", \n    /**\n     * The label's font weight.\n     */\n    weight = \"regular\", \n    ...props\n  }: LabelProps, ref) => {\n    return (\n      <RadixLabel.Root\n        ref={ref}\n        className={clx(labelVariants({ size, weight }), className)}\n        {...props}\n      />\n    )\n  }\n)\nLabel.displayName = \"Label\"\n\nexport { Label }\n"],"names":[],"mappings":";;;AAEA,OAAO,EAAE,GAAG,EAAqB,MAAM,KAAK,CAAA;AAE5C,OAAO,KAAK,KAAK,MAAM,OAAO,CAAA;AAD9B,OAAO,EAAE,KAAK,IAAI,UAAU,EAAE,MAAM,UAAU,CAAA;AAG9C,OAAO,EAAE,GAAG,EAAE,MAAM,aAAa,CAAA;AANjC,YAAY,CAAA;;;;;AAQZ,MAAM,aAAa,gJAAG,MAAA,AAAG,EAAC;IACxB,IAAI,EAAE,WAAW;IACjB,QAAQ,EAAE;QACR,IAAI,EAAE;YACJ,MAAM,EAAE,oBAAoB;YAC5B,KAAK,EAAE,mBAAmB;YAC1B,IAAI,EAAE,oBAAoB;YAC1B,KAAK,EAAE,mBAAmB;SAC3B;QACD,MAAM,EAAE;YACN,OAAO,EAAE,aAAa;YACtB,IAAI,EAAE,aAAa;SACpB;KACF;IACD,eAAe,EAAE;QACf,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,SAAS;KAClB;CACF,CAAC,CAAA;AAMF;;GAEG,CACH,MAAM,KAAK,GAAG,KAAK,yJAAC,UAAU,CAC5B,CAAC,EACC,SAAS,EACT;;GAEG,CACH,IAAI,GAAG,MAAM,EACb;;GAEG,CACH,MAAM,GAAG,SAAS,EAClB,GAAG,KAAK,EACG,EAAE,GAAG,EAAE,EAAE;IACpB,OAAO,AACL,8JAAA,aAAA,uMAAC,QAAU,CAAC,IAAI,EAAA;QACd,GAAG,EAAE,GAAG;QACR,SAAS,yKAAE,MAAA,AAAG,EAAC,aAAa,CAAC;YAAE,IAAI;YAAE,MAAM;QAAA,CAAE,CAAC,EAAE,SAAS,CAAC;QAAA,GACtD,KAAK;IAAA,EACT,CACH,CAAA;AACH,CAAC,CACF,CAAA;AACD,KAAK,CAAC,WAAW,GAAG,OAAO,CAAA","ignoreList":[0]}},
    {"offset": {"line": 1030, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}